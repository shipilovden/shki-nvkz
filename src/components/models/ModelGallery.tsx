"use client";

import { useState, useMemo, useEffect } from "react";
import { Column, Row, Text, Button, Input } from "@once-ui-system/core";
import { ModelViewer } from "./ModelViewer";
import { ModelSidebar } from "./ModelSidebar";
import type { Model3D } from "@/types/models.types";

interface ModelGalleryProps {
  models: Model3D[];
}

export function ModelGallery({ models }: ModelGalleryProps) {
  const [selectedModel, setSelectedModel] = useState<Model3D | null>(models.length > 0 ? models[0] : null);
  const [searchQuery, setSearchQuery] = useState("");
  const [isVRActive, setIsVRActive] = useState(false);
  const [isARActive, setIsARActive] = useState(false);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π
  const filteredModels = useMemo(() => {
    let filtered = models;

    // –ü–æ–∏—Å–∫
    if (searchQuery.trim()) {
      const query = searchQuery.toLowerCase();
      filtered = filtered.filter(model => 
        model.title.toLowerCase().includes(query) ||
        model.description.toLowerCase().includes(query) ||
        model.tags.some(tag => tag.toLowerCase().includes(query)) ||
        model.author?.toLowerCase().includes(query)
      );
    }

    return filtered;
  }, [models, searchQuery]);

  const handleModelSelect = (model: Model3D) => {
    setSelectedModel(model);
  };

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    if (filteredModels.length > 0 && (!selectedModel || !filteredModels.find(m => m.id === selectedModel.id))) {
      setSelectedModel(filteredModels[0]);
    } else if (filteredModels.length === 0) {
      setSelectedModel(null);
    }
  }, [filteredModels, selectedModel]);


  const handleVREnter = () => {
    setIsVRActive(true);
    console.log("–í—Ö–æ–¥ –≤ VR —Ä–µ–∂–∏–º");
  };

  const handleAREnter = () => {
    setIsARActive(true);
    console.log("–í—Ö–æ–¥ –≤ AR —Ä–µ–∂–∏–º");
  };

  const handleFullscreen = () => {
    console.log("–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º");
  };

  const clearSearch = () => {
    setSearchQuery("");
  };

  return (
    <Column gap="xl" style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }} align="center">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Column gap="m" align="center" style={{ width: '100%' }}>
        <Text 
          variant="heading-strong-xl" 
          align="center"
          style={{ 
            fontWeight: '200',
            letterSpacing: '0.1em'
          }}
        >
          –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è
        </Text>
        
        {/* –°–µ—Ä–∞—è –ª–∏–Ω–∏—è –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º */}
        <div
          style={{
            width: '100%',
            height: '1px',
            backgroundColor: '#ddd',
            margin: '16px 0'
          }}
        />
        
        <Text 
          variant="heading-strong-l" 
          align="center"
          style={{ 
            fontWeight: '300',
            letterSpacing: '0.05em'
          }}
        >
          3D –º–æ–¥–µ–ª–∏
        </Text>
      </Column>

      {/* –ü–æ–∏—Å–∫ - –æ—Ç—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω */}
      <Column gap="m" style={{ width: '100%', maxWidth: '600px', display: 'flex', flexDirection: 'column', alignItems: 'center' }} align="center">
        <Row gap="m" vertical="center" align="center" style={{ width: '100%', justifyContent: 'center' }}>
          <Input
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –æ–ø–∏—Å–∞–Ω–∏—é, —Ç–µ–≥–∞–º..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            style={{ flex: 1, maxWidth: '500px' }}
          />
          {searchQuery && (
            <Button variant="secondary" size="s" onClick={clearSearch}>
              –û—á–∏—Å—Ç–∏—Ç—å
            </Button>
          )}
        </Row>
      </Column>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç - –º–∞–∫–µ—Ç –∫–∞–∫ –Ω–∞ Sketchfab */}
      {filteredModels.length > 0 && selectedModel ? (
        <Row gap="xl" style={{ width: '100%', maxWidth: '1400px' }} align="start">
          {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - 3D Viewer –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <Column gap="l" style={{ flex: 1, maxWidth: '800px' }} align="center">
            {/* 3D Viewer */}
            <ModelViewer
              model={selectedModel}
              onVREnter={handleVREnter}
              onAREnter={handleAREnter}
              onFullscreen={handleFullscreen}
            />
          </Column>

          {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –º–æ–¥–µ–ª—è–º–∏ */}
          <Column gap="l" style={{ width: '300px', minWidth: '300px' }} align="start">
            <ModelSidebar
              models={filteredModels}
              selectedModel={selectedModel}
              onModelSelect={handleModelSelect}
            />
          </Column>
        </Row>
      ) : (
        /* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */
        <Column align="center" gap="l" padding="xl">
          <Text variant="heading-strong-m" align="center">
            –ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
          </Text>
          <Text variant="body-default-m" onBackground="neutral-weak" align="center">
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
          </Text>
          <Button variant="secondary" onClick={() => {
            setSearchQuery("");
          }}>
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </Button>
        </Column>
      )}

      {/* –ë–ª–æ–∫ 3D –º–∏—Ä—ã */}
      <Column gap="l" align="center" style={{ width: '100%', maxWidth: '1400px' }}>
        <Text 
          variant="heading-strong-l" 
          align="center"
          style={{ 
            fontWeight: '300',
            letterSpacing: '0.05em'
          }}
        >
          3D –º–∏—Ä—ã
        </Text>
        
        {/* –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è 3D –º–∏—Ä–æ–≤ */}
        <Column 
          gap="m" 
          padding="xl"
          style={{
            backgroundColor: '#fafafa',
            borderRadius: '12px',
            border: '1px solid #ddd',
            width: '100%',
            minHeight: '200px',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center'
          }}
          align="center"
        >
          <Text variant="body-default-m" onBackground="neutral-medium" align="center">
            –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç 3D –º–∏—Ä—ã
          </Text>
          <Text variant="body-default-s" onBackground="neutral-weak" align="center">
            –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ü–µ–Ω—ã –∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
          </Text>
        </Column>
      </Column>

      {/* VR/AR —Å—Ç–∞—Ç—É—Å */}
      {(isVRActive || isARActive) && (
        <Column 
          gap="m" 
          padding="l"
          style={{
            backgroundColor: 'var(--color-brand-alpha-weak)',
            borderRadius: '12px',
            border: '1px solid var(--color-brand-alpha-medium)'
          }}
          align="center"
        >
          <Text variant="body-strong-m" onBackground="brand-medium">
            {isVRActive ? "ü•Ω VR —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω" : "üì± AR —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω"}
          </Text>
          <Text variant="body-default-s" onBackground="brand-weak" align="center">
            {isVRActive 
              ? "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ VR –≥–∞—Ä–Ω–∏—Ç—É—Ä—É –¥–ª—è –∏–º–º–µ—Ä—Å–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
              : "–ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –º–æ–¥–µ–ª–∏"
            }
          </Text>
        </Column>
      )}
    </Column>
  );
}
